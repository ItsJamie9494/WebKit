
PASS Running templatedRSEmpty with ReadableStream with byte source (empty)
PASS ReadableStream with byte source (empty): instances have the correct methods and properties
FAIL ReadableStream with byte source (empty): calling getReader with invalid arguments should throw appropriate errors Default reader on byte stream is not yet supported
PASS Running templatedRSEmptyReader with ReadableStream with byte source (empty) default reader
FAIL ReadableStream with byte source (empty) default reader: instances have the correct methods and properties Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: locked should be true Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: read() should never settle Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: two read()s should both never settle Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: read() should return distinct promises each time Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: getReader() again on the stream should fail Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: releasing the lock should reject all pending read requests promise_test: Unhandled rejection with value: object "NotSupportedError: Default reader on byte stream is not yet supported"
FAIL ReadableStream with byte source (empty) default reader: releasing the lock should cause further read() calls to reject with a TypeError Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: releasing the lock should cause closed calls to reject with a TypeError Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: releasing the lock should cause locked to become false Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: canceling via the reader should cause the reader to act closed Default reader on byte stream is not yet supported
FAIL ReadableStream with byte source (empty) default reader: canceling via the stream should fail Default reader on byte stream is not yet supported
PASS Running templatedRSEmptyReader with ReadableStream with byte source (empty) BYOB reader
PASS ReadableStream with byte source (empty) BYOB reader: instances have the correct methods and properties
PASS ReadableStream with byte source (empty) BYOB reader: locked should be true
PASS ReadableStream with byte source (empty) BYOB reader: read() should never settle
PASS ReadableStream with byte source (empty) BYOB reader: two read()s should both never settle
PASS ReadableStream with byte source (empty) BYOB reader: read() should return distinct promises each time
FAIL ReadableStream with byte source (empty) BYOB reader: getReader() again on the stream should fail assert_throws_js: stream.getReader() should throw a TypeError function "() => stream.getReader()" threw object "NotSupportedError: Default reader on byte stream is not yet supported" ("NotSupportedError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
PASS ReadableStream with byte source (empty) BYOB reader: releasing the lock should reject all pending read requests
PASS ReadableStream with byte source (empty) BYOB reader: releasing the lock should cause further read() calls to reject with a TypeError
PASS ReadableStream with byte source (empty) BYOB reader: releasing the lock should cause closed calls to reject with a TypeError
PASS ReadableStream with byte source (empty) BYOB reader: releasing the lock should cause locked to become false
PASS ReadableStream with byte source (empty) BYOB reader: canceling via the reader should cause the reader to act closed
FAIL ReadableStream with byte source (empty) BYOB reader: canceling via the stream should fail assert_unreached: Should have rejected: undefined Reached unreachable code
PASS Running templatedRSThrowAfterCloseOrError with ReadableStream with byte source
PASS ReadableStream with byte source: enqueue() throws after close()
PASS ReadableStream with byte source: enqueue() throws after enqueue() and close()
PASS ReadableStream with byte source: enqueue() throws after error()
PASS ReadableStream with byte source: close() throws after error()

